using Microsoft.Xna.Framework;
using Scenes.Objects.UI.MainMenu;
using Peggley.Code.Scenes.Objects.UI.Interactable.Buttons.SceneSwap;

namespace Scenes.SceneTypes
{
    internal class MainMenuScene : Scene
    {
        public MainMenuScene()
            : base(MainMenuUICreator.GenerateSceneUIElements, "Main Menu") 
        {
            NonAutoGeneratedInitialization();

            OnSceneEnter();
        }

        protected override void NonAutoGeneratedInitialization()
        {
            // Scene swap button
            SceneSwapButton TEMPBUTTON = MainMenuUICreator.GenerateSceneSwapButton(_sceneName);
            AddNewSwapButton(TEMPBUTTON, new(typeof(MainGameScene)));


            // Add to scene
            foreach(SceneSwapButton s in _sceneSwapButtons)
            {
                _toAddNextFrame.Enqueue(s);
            }
        }

        public override void OnSceneEnter()
        {
            // DO NOT REMOVE
            // This will cause memory leaks if removed
            base.OnSceneEnter(); 
        }

        public override void OnSceneExit()
        {
            // DO NOT REMOVE
            // This will cause memory leaks if removed
            base.OnSceneExit();
        }

        public override void Update(GameTime gameTime)
        {
            base.GetInputs(gameTime);

            base.Update(gameTime);
        }
    }
}
